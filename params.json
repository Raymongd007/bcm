{"name":"bcm","tagline":"Bayesian Committee Machine MATLAB software written by Anton Schwaighofer","body":"\r\nBayesian Committee Machine\r\n===\r\n\r\nThis software used to be hosted by Anton Schwaighofer, but doesn't appear to be on line any more. We've added it here under the sods repo to ensure it is available. Below is Anton's original README file.\r\n\r\nVersion 1.0, November 2005\r\n\r\nThe Bayesian Committee Machine (BCM) is an approximation method for\r\nlarge-scale Gaussian process regression.\r\n\r\nWhat you should know beforehand:\r\n\r\n- The code is for Matlab\r\n\r\n- It requires the Netlab toolbox. You can download Netlab. Aston make netlab\r\n  http://www.aston.ac.uk/eas/research/groups/ncrg/resources/netlab/ or we have a local repo\r\n  available from sods https://github.com/sods/netlab/.\r\n\r\n- Install Netlab *before* trying to run any of the programs here.\r\n\r\n- To get started and to check your installation, try running 'dembcm.m'\r\n\r\n- If you are looking for example code to run the BCM, have a look at dembcm.m\r\n  All of the main features are used and explained there.\r\n\r\n\r\nRelevant publications:\r\n\r\nV. Tresp. A bayesian committee machine. Neural Computation, 12, 2000\r\n\r\nA. Schwaighofer and V. Tresp. Transductive and inductive methods for\r\napproximate Gaussian process regression. In S. Becker, S. Thrun, and\r\nK. Obermayer, editors, Advances in Neural Information Processing Systems\r\n15. MIT Press, 2003\r\n\r\n","google":"UA-62964644-1","note":"Don't delete this file! It's used internally to help with page regeneration."}